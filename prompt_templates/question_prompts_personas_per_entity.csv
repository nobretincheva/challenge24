Relation,PromptTemplate,,,,,
countryLandBordersCountry,"I'd love to know more about the geography from someone who truly understands and loves this country. Does {subject_entity} share any land borders?  I've been thinking of moving here! You can return just the yes or no formatted as a Python list in the final answer (final_answer = [Yes]/[No])., I'd love to know more about the geography from someone who truly understands and loves this country. Which countries share a land border with {subject_entity}? I've been thinking of moving here! You can return just the name of the countries  formatted as a Python list in the final answer (final_answer = [country 1, ...]).",,,,,
personHasCityOfDeath,"Your admiration for  {subject_entity} has undoubtedly led you to study their life extensively. Has {subject_entity} died? I wish to learn more about such an influential figure. You can return just the yes or no formatted as a Python list in the final answer (final_answer = [Yes]/[No])., Your admiration for  {subject_entity} has undoubtedly led you to study their life extensively. In which city did {subject_entity} die?  I wish to learn more about such an influential figure. You can return just the name of the city  formatted as a Python list in the final answer (final_answer = [city name]).",,,,,
seriesHasNumberOfEpisodes,"Final answer should be yes or no. Is there a season {subject_entity}?, Final answer should consist of a number. As the biggest fan of  {subject_entity} you know everything there is to know about the show. How many episodes does season {subject_entity} have?, Final answer should consist of a number. As the biggest fan of  {subject_entity} you know everything there is to know about the show. How many seasons does the series {subject_entity}  have?, As the biggest fan of  {subject_entity} you know everything there is to know about the show. How many episodes does {subject_entity} have? I've been thinking of binge-watching it!  You can return just the total number of episodes formatted as a Python list in the final answer (final_answer = [N]). ",,,,,
awardWonBy,"Final answer should be yes or no. Was the {subject_entity} awarded?, Final answer should consist of name(s). Who was the {subject_entity} awarded to?, Final answer should consist of a year (e.g. 1234). When was the first {subject_entity} awarded?",,,,,
companyTradesAtStockExchange,"As the CFO of {subject_entity} you must be aware of all pertinent details regarding the company's stock. Is the {subject_entity} listed on the stock exchange? As a potential investor I would like to have more details before making a decision to invest. You can return just the yes or no formatted as a Python list in the final answer (final_answer = [Yes]/[No]), As the CFO of {subject_entity} you must be aware of all pertinent details regarding the company's stock. Where do shares of {subject_entity} trade? You can return just the full name of the stock exchanges or a well known alias formatted as a Python list in the final answer (final_answer = [stock exchange 1, ...]).",,,,,
